name: Security Audit

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch: # Allow manual trigger

jobs:
  cargo-audit:
    name: Cargo Security Audit
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust-version: [stable]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust-version }}

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
          key: ${{ runner.os }}-cargo-audit-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-audit-

      - name: Install cargo-audit
        run: cargo install --force cargo-audit

      - name: Run cargo audit for security vulnerabilities
        working-directory: src-tauri
        run: |
          echo "Running cargo audit with known advisories ignored..."
          
          # Run audit ignoring known unmaintained GTK3 ecosystem advisories
          # These will be resolved when Tauri migrates to GTK4 in v3
          cargo audit \
            --ignore RUSTSEC-2024-0413 \
            --ignore RUSTSEC-2024-0416 \
            --ignore RUSTSEC-2024-0412 \
            --ignore RUSTSEC-2024-0418 \
            --ignore RUSTSEC-2024-0411 \
            --ignore RUSTSEC-2024-0417 \
            --ignore RUSTSEC-2024-0414 \
            --ignore RUSTSEC-2024-0415 \
            --ignore RUSTSEC-2024-0420 \
            --ignore RUSTSEC-2024-0419 \
            --ignore RUSTSEC-2024-0436 \
            --ignore RUSTSEC-2024-0370 \
            --ignore RUSTSEC-2024-0429
          
          echo "✅ Security audit completed - no actionable vulnerabilities found"

      - name: Document known advisories
        working-directory: src-tauri
        run: |
          echo "## Known Security Advisories (Ignored)" >> $GITHUB_STEP_SUMMARY
          echo "The following advisories are ignored as they are related to unmaintained GTK3 ecosystem:" >> $GITHUB_STEP_SUMMARY
          echo "- RUSTSEC-2024-0413: atk - unmaintained" >> $GITHUB_STEP_SUMMARY
          echo "- RUSTSEC-2024-0416: atk-sys - unmaintained" >> $GITHUB_STEP_SUMMARY  
          echo "- RUSTSEC-2024-0412: gdk - unmaintained" >> $GITHUB_STEP_SUMMARY
          echo "- RUSTSEC-2024-0418: gdk-sys - unmaintained" >> $GITHUB_STEP_SUMMARY
          echo "- RUSTSEC-2024-0411: gdkwayland-sys - unmaintained" >> $GITHUB_STEP_SUMMARY
          echo "- RUSTSEC-2024-0417: gdkx11 - unmaintained" >> $GITHUB_STEP_SUMMARY
          echo "- RUSTSEC-2024-0414: gdkx11-sys - unmaintained" >> $GITHUB_STEP_SUMMARY
          echo "- RUSTSEC-2024-0415: gtk - unmaintained" >> $GITHUB_STEP_SUMMARY
          echo "- RUSTSEC-2024-0420: gtk-sys - unmaintained" >> $GITHUB_STEP_SUMMARY
          echo "- RUSTSEC-2024-0419: gtk3-macros - unmaintained" >> $GITHUB_STEP_SUMMARY
          echo "- RUSTSEC-2024-0436: paste - unmaintained" >> $GITHUB_STEP_SUMMARY
          echo "- RUSTSEC-2024-0370: proc-macro-error - unmaintained" >> $GITHUB_STEP_SUMMARY
          echo "- RUSTSEC-2024-0429: glib - unsound Iterator implementation" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "These will be resolved when Tauri migrates to GTK4 in version 3.x" >> $GITHUB_STEP_SUMMARY

  yarn-audit:
    name: Yarn Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run yarn audit
        run: |
          # Run audit and capture output in both JSON and human-readable formats
          echo "Running yarn audit..."
          
          # First run human-readable audit for logging
          yarn audit --level moderate || true
          
          # Test JSON audit for parsing
          yarn audit --level moderate --json > audit-results.json
          AUDIT_EXIT_CODE=$?
          
          if [ "$AUDIT_EXIT_CODE" -ne 0 ]; then
            echo "Yarn audit found vulnerabilities. Analyzing..."
            
            # Count different severity levels by counting unique advisories
            HIGH_COUNT=$(grep '"severity":"high"' audit-results.json | wc -l)
            CRITICAL_COUNT=$(grep '"severity":"critical"' audit-results.json | wc -l)  
            MODERATE_COUNT=$(grep '"severity":"moderate"' audit-results.json | wc -l)
            
            # Remove any whitespace
            HIGH_COUNT=$(echo $HIGH_COUNT | tr -d ' \n')
            CRITICAL_COUNT=$(echo $CRITICAL_COUNT | tr -d ' \n')
            MODERATE_COUNT=$(echo $MODERATE_COUNT | tr -d ' \n')
            
            echo "Vulnerability counts:"
            echo "- Critical: $CRITICAL_COUNT"
            echo "- High: $HIGH_COUNT" 
            echo "- Moderate: $MODERATE_COUNT"
            
            # Fail only on critical or high vulnerabilities
            if [ "$CRITICAL_COUNT" -gt 0 ] || [ "$HIGH_COUNT" -gt 0 ]; then
              echo "❌ Critical or high severity vulnerabilities found!"
              echo "Please review and fix these vulnerabilities:"
              grep -E '"severity":"(critical|high)"' audit-results.json || true
              exit 1
            else
              echo "⚠️ Only moderate vulnerabilities found (acceptable for CI)"
              echo "Consider upgrading dependencies in next maintenance cycle"
              exit 0
            fi
          else
            echo "✅ No security vulnerabilities found in dependencies."
          fi


  security-summary:
    name: Security Audit Summary
    runs-on: ubuntu-latest
    needs: [cargo-audit, yarn-audit]
    if: always()
    
    steps:
      - name: Security audit summary
        run: |
          echo "## Security Audit Results" >> $GITHUB_STEP_SUMMARY
          echo "| Component | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|---------|" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.cargo-audit.result }}" == "success" ]; then
            echo "| Rust Dependencies | ✅ No vulnerabilities found |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| Rust Dependencies | ❌ Vulnerabilities detected |" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.yarn-audit.result }}" == "success" ]; then
            echo "| Yarn Dependencies | ✅ No vulnerabilities found |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| Yarn Dependencies | ❌ Vulnerabilities detected |" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📊 **Audit completed at:** $(date)" >> $GITHUB_STEP_SUMMARY